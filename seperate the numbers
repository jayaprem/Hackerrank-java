Conditions:
1) a[i]-a[i-1]=1 (i.e., each element in the sequence is 1 more than the previous element).
2)no leading zero's s={10203} 1,02,03 is not a beautiful string
3)should be in increasing sequence

Input:
The first line contains an integer q, the number of strings to evaluate. 
Each of the next q lines contains an integer string s to query.
7
1234
91011
99100
101103
010203
13
1
Output:For each query,
print its answer on a new line (i.e., either YES x where  is the smallest first number of the increasing sequence, or NO).
YES 1
YES 9
YES 99
NO
NO
NO
NO
Explanation:
1234=1+2+3+4
91011=9+10+11
99100=99+100
The first three numbers are beautiful
The remaining numbers are not beautiful:

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {
public static void main(String[] args) {
    Scanner in = new Scanner(System.in);
    int q = in.nextInt();
    for(int a0 = 0; a0 < q; a0++) {
        String s = in.next();
        boolean valid = false;
        long firstx = -1;
        // Try each possible starting number
        for (int i=1; i<=s.length()/2; i++) {
            long x = Long.parseLong(s.substring(0,i));
            firstx = x;
           // Build up sequence starting with this number
            String test = Long.toString(firstx);
            while (test.length() < s.length()) {
                test += Long.toString(++x);
            }
            // Compare to original
            if (test.equals(s)) {
                valid = true;
                break;
            }
        }
        System.out.println(valid ? "YES " + firstx : "NO");
    }
}
}
