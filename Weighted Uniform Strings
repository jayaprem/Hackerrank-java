A weighted string is a string of lowercase English letters where each letter has a weight.
Character weights are 1 to 26  from a to z 

The first line contains a string s , the original string. 
The second line contains an integer n, the number of queries. 
Each of the next n lines contains an integer x[i] , the weight of a uniform subtring of s that may or may not exist.
If that wait is present in the string print "Yes" otherwise print "No"
Input:
abccddde
6
1
3
12
5
9
10
Output:
Yes
Yes
Yes
Yes
No
No
Expalnation:
a     1
b     2
c     3
cc    3+3=6
d     4
dd    4+4=8
ddd   4+4+4=12
e     5
so 6 1 3 present in the string
soln:

import java.io.*;
import java.math.*;
import java.util.*;
public class Solution {
 public static void main(String[] args) {
    Scanner scan = new Scanner(System.in);
        String str   = scan.next();
        int n        = scan.nextInt();
        HashSet<Integer> weights = getWeights(str);
        while (n-- > 0) {
            int x = scan.nextInt();
            System.out.println(weights.contains(x) ? "Yes" : "No");
        }
        scan.close();
}
    
    private static HashSet<Integer> getWeights(String str) {
        HashSet<Integer> weights = new HashSet<>();
        int weight = 0;
        char prev = ' '; // so it doesn't match 1st character
        for (int i = 0; i < str.length(); i++) {
            char curr = str.charAt(i);
            if (curr != prev) {
                weight = 0;
            } 
            weight += curr - 96;
            weights.add(weight);
            prev = curr;
        }
        return weights;
    }
}
